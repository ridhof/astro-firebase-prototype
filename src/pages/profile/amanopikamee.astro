---
import { initializeApp } from "firebase/app";
import { collection, getDocs, getFirestore } from "firebase/firestore";

import Layout from '../../layouts/Layout.astro';
import Card from '../../components/Card.astro';

const firebaseConfig = {
  apiKey: import.meta.env.API_KEY,
  authDomain: import.meta.env.AUTH_DOMAIN,
  projectId: import.meta.env.PROJECT_ID,
  storageBucket: import.meta.env.STORAGE_BUCKET,
  messagingSenderId: import.meta.env.MESSAGING_SENDER_ID,
  appId: import.meta.env.API_ID
};
const app = initializeApp(firebaseConfig);

const db = getFirestore(app);
const querySnapshot = await getDocs(collection(db, "submissions"));
let data: { id: string, data: any }[] = [];
querySnapshot.forEach((doc) => {
    data.push({ id: doc.id, data: doc.data() });
});
---

<Layout title="Welcome to Astro.">
	<main>
		<h1>Welcome to <span class="text-gradient">Amano Pikamee</span></h1>
		<ul role="list" class="link-card-grid">
			<Card
				href="https://docs.astro.build/"
				title="Amano Pikamee"
				body="Learn how Astro works and explore the official API docs."
			/>
            <img src="https://images.unsplash.com/photo-1674822876913-c717477e98eb?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=987&q=80" width="200" alt="Astro">
		</ul>
        <ul>
            {
                data.map(
                    (row) => 
                        <li>
                            <p>Name: {row.data.name}</p>  
                            <p>Message: {row.data.fanart_message}</p>
                            <p hidden={row.data.fanart_one == ""}>Fanart: <a href={row.data.fanart_one}>Link</a></p>    
                        </li>
                )
            }
        </ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
